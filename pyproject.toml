[tool.poetry]
name = "cms"
version = "1.5.dev0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.6.2"
tornado = "^4.5.3"
psycopg2 = "^2.9.1"
SQLAlchemy = "^1.4"
netifaces = "^0.11"
pycryptodome = "^3.11"
psutil = "^5.8"
requests = "^2.26.0"
gevent = "^21.8.0"
greenlet = "^1.1.2"
Werkzeug = "^2.0.2"
patool = "^1.12"
bcrypt = "^3.2"
chardet = "^4.0.0"
Babel = "^2.9.1"
pyxdg = "^0.27"
Jinja2 = "^3.0.2"
colorlog = "^6.5.0"
PyYAML = "^5.4.1"
voluptuous = "^0.12.2"
secure-cookie = "^0.2.0"

[tool.poetry.dev-dependencies]
black = "^21.9b0"
flake8 = "^4.0.1"
pylint = "^2.11.1"
isort = "^5.9.3"
pyupgrade = "^2.29.0"

[tool.poetry.scripts]
cmsRunTests = "cmstestsuite.RunTests:main"
cmsAddAdmin = "cmscontrib.AddAdmin:main"
cmsAddParticipation = "cmscontrib.AddParticipation:main"
cmsAddStatement = "cmscontrib.AddStatement:main"
cmsAddSubmission = "cmscontrib.AddSubmission:main"
cmsAddTeam = "cmscontrib.AddTeam:main"
cmsAddTestcases = "cmscontrib.AddTestcases:main"
cmsAddUser = "cmscontrib.AddUser:main"
cmsCleanFiles = "cmscontrib.CleanFiles:main"
cmsDumpExporter = "cmscontrib.DumpExporter:main"
cmsDumpImporter = "cmscontrib.DumpImporter:main"
cmsDumpUpdater = "cmscontrib.DumpUpdater:main"
cmsExportSubmissions = "cmscontrib.ExportSubmissions:main"
cmsImportContest = "cmscontrib.ImportContest:main"
cmsImportDataset = "cmscontrib.ImportDataset:main"
cmsImportTask = "cmscontrib.ImportTask:main"
cmsImportTeam = "cmscontrib.ImportTeam:main"
cmsImportUser = "cmscontrib.ImportUser:main"
cmsRWSHelper = "cmscontrib.RWSHelper:main"
cmsRemoveContest = "cmscontrib.RemoveContest:main"
cmsRemoveParticipation = "cmscontrib.RemoveParticipation:main"
cmsRemoveSubmissions = "cmscontrib.RemoveSubmissions:main"
cmsRemoveTask = "cmscontrib.RemoveTask:main"
cmsRemoveUser = "cmscontrib.RemoveUser:main"
cmsSpoolExporter = "cmscontrib.SpoolExporter:main"
cmsMake = "cmstaskenv.cmsMake:main"
cmsAOI = "cmscontrib.aoi.__main__:main"
_cmsAOIzip = "cmscontrib.aoi.zipprog:main"
cmsLogService = "scripts.cmsLogService:main"
cmsScoringService = "scripts.cmsScoringService:main"
cmsEvaluationService = "scripts.cmsEvaluationService:main"
cmsWorker = "scripts.cmsWorker:main"
cmsResourceService = "scripts.cmsResourceService:main"
cmsChecker = "scripts.cmsChecker:main"
cmsContestWebServer = "scripts.cmsContestWebServer:main"
cmsAdminWebServer = "scripts.cmsAdminWebServer:main"
cmsProxyService = "scripts.cmsProxyService:main"
cmsPrintingService = "scripts.cmsPrintingService:main"
cmsRankingWebServer = "scripts.cmsRankingWebServer:main"
cmsInitDB = "scripts.cmsInitDB:main"
cmsDropDB = "scripts.cmsDropDB:main"
cmsDiscordBot = "scripts.cmsDiscordBot:main"

[tool.poetry.plugins."cms.grading.tasktypes"]
".rst" = "some_module:SomeClass"
"Batch" = "cms.grading.tasktypes.Batch:Batch"
"Communication" = "cms.grading.tasktypes.Communication:Communication"
"OutputOnly" = "cms.grading.tasktypes.OutputOnly:OutputOnly"
"TwoSteps" = "cms.grading.tasktypes.TwoSteps:TwoSteps"

[tool.poetry.plugins."cms.grading.scoretypes"]
"Sum" = "cms.grading.scoretypes.Sum:Sum"
"GroupMin" = "cms.grading.scoretypes.GroupMin:GroupMin"
"GroupMul" = "cms.grading.scoretypes.GroupMul:GroupMul"
"GroupThreshold" = "cms.grading.scoretypes.GroupThreshold:GroupThreshold"

[tool.poetry.plugins."cms.grading.languages"]
"C++11 / g++" = "cms.grading.languages.cpp11_gpp:Cpp11Gpp"
"C++14 / g++" = "cms.grading.languages.cpp14_gpp:Cpp14Gpp"
"C++17 / g++" = "cms.grading.languages.cpp17_gpp:Cpp17Gpp"
"C++20 / g++" = "cms.grading.languages.cpp20_gpp:Cpp20Gpp"
"C11 / gcc" = "cms.grading.languages.c11_gcc:C11Gcc"
"C# / Mono" = "cms.grading.languages.csharp_mono:CSharpMono"
"Haskell / ghc" = "cms.grading.languages.haskell_ghc:HaskellGhc"
"Java / JDK" = "cms.grading.languages.java_jdk:JavaJDK"
"Pascal / fpc" = "cms.grading.languages.pascal_fpc:PascalFpc"
"PHP" = "cms.grading.languages.php:Php"
"Python 2 / CPython" = "cms.grading.languages.python2_cpython:Python2CPython"
"Python 3 / CPython" = "cms.grading.languages.python3_cpython:Python3CPython"
"Python 3 / PyPy" = "cms.grading.languages.python3_pypy:Python3PyPy"
"Rust" = "cms.grading.languages.rust:Rust"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
